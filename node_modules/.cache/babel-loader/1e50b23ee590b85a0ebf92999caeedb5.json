{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\projects\\\\TODO\\\\todo\\\\src\\\\components\\\\Task.js\";\nimport { ListItem } from '@material-ui/core';\nimport { ListItemText } from '@material-ui/core';\nimport { ListItemIcon } from '@material-ui/core';\nimport { ListItemSecondaryAction } from '@material-ui/core';\nimport { IconButton } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\nimport { Checkbox } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = ({\n  task,\n  SetCheckBox,\n  deleteTask\n}) => {\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    dense: true,\n    button: true,\n    role: undefined,\n    onClick: () => SetCheckBox(task.id),\n    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n        edge: \"start\",\n        checked: task.check,\n        tabIndex: -1,\n        disableRipple: true,\n        inputProps: {\n          'aria-labelledby': 0\n        },\n        color: \"primary\",\n        onClick: () => SetCheckBox(task.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      id: task.id,\n      primary: task.text,\n      secondary: `${task.time.split(\"T\").join(\" \")}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: '/update',\n          state: {\n            foo: 'bar'\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"update\",\n          children: /*#__PURE__*/_jsxDEV(UpdateIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => deleteTask(task.id),\n        edge: \"end\",\n        \"aria-label\": \"delete\",\n        children: /*#__PURE__*/_jsxDEV(DeleteForeverOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["C:/react/projects/TODO/todo/src/components/Task.js"],"names":["ListItem","ListItemText","ListItemIcon","ListItemSecondaryAction","IconButton","Link","UpdateIcon","DeleteForeverOutlinedIcon","Checkbox","Task","task","SetCheckBox","deleteTask","undefined","id","check","text","time","split","join","pathname","state","foo"],"mappings":";AAAA,SAAQA,QAAR,QAAuB,mBAAvB;AACA,SAAQC,YAAR,QAA2B,mBAA3B;AACA,SAAQC,YAAR,QAA2B,mBAA3B;AACA,SAAQC,uBAAR,QAAsC,mBAAtC;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,yBAAP,MAAsC,0CAAtC;AAEA,SAAQC,QAAR,QAAuB,mBAAvB;;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA,WAAN;AAAmBC,EAAAA;AAAnB,CAAD,KAAoC;AAC7C,sBACI,QAAC,QAAD;AAAU,IAAA,KAAK,MAAf;AAAgB,IAAA,MAAM,MAAtB;AAAuB,IAAA,IAAI,EAAEC,SAA7B;AAAwC,IAAA,OAAO,EAAE,MAAMF,WAAW,CAACD,IAAI,CAACI,EAAN,CAAlE;AAAA,4BACI,QAAC,YAAD;AAAA,6BACE,QAAC,QAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,OAAO,EAAEJ,IAAI,CAACK,KAFhB;AAGE,QAAA,QAAQ,EAAE,CAAC,CAHb;AAIE,QAAA,aAAa,MAJf;AAKE,QAAA,UAAU,EAAE;AAAE,6BAAmB;AAArB,SALd;AAME,QAAA,KAAK,EAAC,SANR;AAOE,QAAA,OAAO,EAAE,MAAMJ,WAAW,CAACD,IAAI,CAACI,EAAN;AAP5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI,QAAC,YAAD;AAAc,MAAA,EAAE,EAAEJ,IAAI,CAACI,EAAvB;AAA2B,MAAA,OAAO,EAAEJ,IAAI,CAACM,IAAzC;AAA+C,MAAA,SAAS,EAAG,GAAEN,IAAI,CAACO,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B,GAA1B,CAA+B;AAA5F;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI,QAAC,uBAAD;AAAA,8BACA,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE,SAAZ;AAAuBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,GAAG,EAAE;AAAP;AAA9B,SAAV;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,KAAjB;AAAuB,wBAAW,QAAlC;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAME,QAAC,UAAD;AAAY,QAAA,OAAO,EAAE,MAAIV,UAAU,CAACF,IAAI,CAACI,EAAN,CAAnC;AAA8C,QAAA,IAAI,EAAC,KAAnD;AAAyD,sBAAW,QAApE;AAAA,+BACE,QAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA3BD;;KAAML,I;AA6BN,eAAeA,IAAf","sourcesContent":["import {ListItem} from '@material-ui/core';\r\nimport {ListItemText} from '@material-ui/core';\r\nimport {ListItemIcon} from '@material-ui/core';\r\nimport {ListItemSecondaryAction} from '@material-ui/core';\r\nimport {IconButton} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\r\n\r\nimport {Checkbox} from '@material-ui/core';\r\n\r\n\r\nconst Task = ({task,SetCheckBox, deleteTask}) => {\r\n    return (\r\n        <ListItem dense button role={undefined} onClick={() => SetCheckBox(task.id)}> \r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={task.check}\r\n                tabIndex={-1}\r\n                disableRipple\r\n                inputProps={{ 'aria-labelledby': 0 }}\r\n                color=\"primary\"\r\n                onClick={() => SetCheckBox(task.id)}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={task.id} primary={task.text} secondary={`${task.time.split(\"T\").join(\" \")}`} />\r\n            <ListItemSecondaryAction>\r\n            <Link to={{ pathname: '/update', state: { foo: 'bar'} }}>\r\n                <IconButton edge=\"end\" aria-label=\"update\">\r\n                  <UpdateIcon />\r\n                </IconButton>\r\n              </Link>\r\n              <IconButton onClick={()=>deleteTask(task.id)} edge=\"end\" aria-label=\"delete\">\r\n                <DeleteForeverOutlinedIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default Task\r\n"]},"metadata":{},"sourceType":"module"}